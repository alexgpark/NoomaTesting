{
  "name": "Noomatesting",
  "tagline": "",
  "body": "-----\r\n\r\n\r\n# Random Pokemon\r\n\r\n\r\n-----\r\n\r\n#### **Subclassing MKAnnotation**\r\n\r\nSo our next step is to make it so that we have random Pokemon spawning on the Map. Right now, it's just spawning Mew.\r\n\r\nTo make this happen we have to create a subclass of `MKAnnotation`.\r\n\r\n So lets go ahead and create a new file called PokeAnnotation.swift\r\n \r\n ![](https://media.giphy.com/media/l3vRfwo8SsuLGw2Ig/giphy.gif)\r\n \r\n```php\r\nimport UIKit\r\nimport MapKit\r\n\r\nclass PokeAnnotation : NSObject, MKAnnotation { \r\n\t\tvar coordinate: CLLocationCoordinate2D\r\n\t\t\r\n\t\tinit(coord: CLLocationCoordinate2D) {\r\n\t\t\tself.coordinate = coord\r\n\t\t}\r\n}\r\n\r\n```\r\n\r\nThis subclass has everything that `MKAnnotation` has, but will have some of its own custom stuff as well.\r\n\r\nNow back over in our Map View Controller, we are going to update our Timer code like so:\r\n\r\n```php\r\nTimer.scheduledTimer(withTimeInterval: 5: , repeats: true, block: { (timer) in \r\n    // Spawn a Pokemon\r\n    if let coord = self.manager.location?.coordinate {\r\n        let anno = PokeAnnotation(coord: coord)\r\n        let randoLat = (Double(arc4random_uniform(200)) - 100.0) / 100000.0\r\n        let randoLon = (Double(arc4random_uniform(200)) - 100.0) / 100000.0\r\n        anno.coordinate.latitude += randoLat\r\n        anno.coordinate.longitude += randoLong\r\n        self.mapView.addAnnotation(anno)\r\n    }\r\n})\r\n```\r\n\r\nRun the app now and you'll see the app still runs with this new code. Our new Subclass is working fine.\r\n\r\n```php\r\nimport UIKit\r\nimport MapKit\r\n\r\nclass PokeAnnotation : NSObject, MKAnnotation { \r\n\t\tvar coordinate: CLLocationCoordinate2D\r\n\t\tvar pokemon : Pokemon\r\n\t\t\r\n\t\tinit(coord: CLLocationCoordinate2D, pokemon: Pokemon) {\r\n\t\t\tself.coordinate = coord\r\n\t\t\tself.pokemon = pokemon\r\n\t\t}\r\n}\r\n\r\n```\r\n\r\nWe've now added a pokemon variable. This says if you're making a PokeAnnotation, you also have to initialize with a Pokemon.\r\n\r\n\r\n-----\r\n\r\n\r\n\r\n#### **Accessing the Pokemon**\r\n\r\nNow let's go back to our Timer code and update with this new property:\r\n\r\n```php\r\nTimer.scheduledTimer(withTimeInterval: 5: , repeats: true, block: { (timer) in \r\n    // Spawn a Pokemon\r\n    if let coord = self.manager.location?.coordinate {\r\n\t\t\r\n\t\tlet pokemon = self.pokemons[Int(arc4random_uniform(UInt32(self.pokemons.count))]\r\n\t\t\r\n\t\tlet anno = PokeAnnotation(coord: coord, pokemon: pokemons[] )\r\n\t\tlet randoLat = (Double(arc4random_uniform(200)) - 100.0) / 100000.0\r\n\t\tlet randoLon = (Double(arc4random_uniform(200)) - 100.0) / 100000.0\r\n\t\tanno.coordinate.latitude += randoLat\r\n\t\tanno.coordinate.longitude += randoLong\r\n\t\tself.mapView.addAnnotation(anno)\r\n    }\r\n})\r\n```\r\n\r\n```php\r\nfunc mapView(_ mapView: MKMapView, viewFor annotation: MKAnnotation) -> MKAnnotationView? {\r\n\r\n    if annotation is MKUserLocation {\r\n        let annoView = MKAnnotationView(annotation: annotation, reuseIdentifier:  nil)\r\n\r\n        annoView.image = UIImage(named: \"player\")\r\n        var frame = annoView.frame\r\n        frame.size.height = 50 \r\n        frame.size.width = 50\r\n        annoView.frame = frame\r\n\r\n        return annoView\r\n    }\r\n\r\n    let annoView = MKAnnotationView(annotation: annotation, reuseIdentifier:  nil)\r\n\t\t\r\n\t\tlet pokemon = (annotation as! PokeAnnotation).pokemon\r\n\t\r\n    annoView.image = UIImage(named: \"pokemon.imageName\")\r\n    var frame = annoView.frame\r\n    frame.size.height = 50 \r\n    frame.size.width = 50\r\n    annoView.frame = frame\r\n\r\n    return annoView\r\n}\r\n```\r\n\r\nRun the app and now we should be seeing various different Pokemon showing up! Yes!!\r\n\r\n![](https://media.giphy.com/media/3o6ZsSp9Df8BfN7jXO/giphy.gif)\r\n\r\n![](https://media.giphy.com/media/3o6ZsSp9Df8BfN7jXO/giphy.gif)\r\n\r\n![](http://i.imgur.com/60bts.gif)\r\n\r\nGive yourself a pat on the back. That wasn't easy.\r\n\r\nNext, we want to let the user catch the Pokemon if they are close enough. Let's keep truckin!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}